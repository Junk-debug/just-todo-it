datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider = "prisma-client-js"
}

enum TaskRole {
  OWNER
  VIEWER
  EDITOR
}

enum TokenType {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}

model Token {
  id       String    @id @default(uuid())
  isActive Boolean   @default(true)
  token    String    @unique
  type     TokenType

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  createdAt DateTime @default(now())
  expiresAt DateTime
}

model User {
  id       String  @id @default(uuid())
  verified Boolean @default(false)
  email    String  @unique
  name     String?
  password String

  tokens      Token[]
  assignments Assignment[]
  updatedAt   DateTime     @updatedAt
  createdAt   DateTime     @default(now())
}

model Assignment {
  taskId   String
  userId   String
  role     TaskRole
  accepted Boolean?

  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@unique([taskId, userId])
}

model Task {
  id          String    @id @default(uuid())
  completed   Boolean   @default(false)
  title       String
  description String?
  dueDate     DateTime?

  assignments Assignment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
